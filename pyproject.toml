[tool.poetry]
name = "pcap-analyser"
version = "0.1.0"
description = "CLI tool to analyze PCAP files and return PASS/FAIL based on thresholds"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "pcap_analyser", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.3"
pyshark = "^0.4.2.11"
rich = "^13.7.0"
pydantic = "^2.5.2"
pyyaml = "^6.0.1"
scapy = "^2.6.1"

[tool.poetry.scripts]
pcap-analyser = "src.pcap_analyser.cli:cli"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
flake8 = "^7.2.0"
black = "^24.3.0"
mypy = "^1.9.0"
pytest-cov = "^3.0.0"
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.mypy.plugins."pydantic.*"]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--verbose --cov=src --cov-report=term-missing"
filterwarnings = "ignore::DeprecationWarning"
